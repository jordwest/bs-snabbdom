// Generated by BUCKLESCRIPT VERSION 4.0.5, PLEASE EDIT WITH CARE
'use strict';

var Js_primitive = require("bs-platform/lib/js/js_primitive.js");
var Snabbdom_dom = require("./snabbdom_dom.js");
var Snabbdom_data = require("./snabbdom_data.js");
var Caml_exceptions = require("bs-platform/lib/js/caml_exceptions.js");

function empty() {
  return {
          sel: undefined,
          data: Snabbdom_data.empty(/* () */0),
          children: undefined,
          elm: undefined,
          text: undefined,
          key: undefined
        };
}

function clear_text(vnode) {
  vnode.children = undefined;
  return /* () */0;
}

function set_in_data(path, value, vnode) {
  vnode.data = Snabbdom_data.set_in_path(vnode.data, path, value);
  return vnode;
}

var Element_with_id_not_found = Caml_exceptions.create("Snabbdom_vnode.Element_with_id_not_found");

function from_dom_id(dom_id) {
  var match = Snabbdom_dom.get_element_by_id(Snabbdom_dom.$$document, dom_id);
  if (match !== undefined) {
    return Js_primitive.valFromOption(match);
  } else {
    throw [
          Element_with_id_not_found,
          dom_id
        ];
  }
}

function set_sel(prim, prim$1) {
  prim.sel = prim$1;
  return /* () */0;
}

function set_data(prim, prim$1) {
  prim.data = prim$1;
  return /* () */0;
}

function set_children(prim, prim$1) {
  prim.children = prim$1;
  return /* () */0;
}

function set_text(prim, prim$1) {
  prim.text = prim$1;
  return /* () */0;
}

function set_key(prim, prim$1) {
  prim.key = prim$1;
  return /* () */0;
}

function get_children(prim) {
  return Js_primitive.nullable_to_opt(prim.children);
}

function get_elm(prim) {
  return Js_primitive.nullable_to_opt(prim.elm);
}

function get_text(prim) {
  return Js_primitive.nullable_to_opt(prim.text);
}

function of_dom_element(prim) {
  return prim;
}

exports.empty = empty;
exports.set_sel = set_sel;
exports.set_data = set_data;
exports.set_children = set_children;
exports.set_text = set_text;
exports.set_key = set_key;
exports.clear_text = clear_text;
exports.get_children = get_children;
exports.get_elm = get_elm;
exports.get_text = get_text;
exports.set_in_data = set_in_data;
exports.Element_with_id_not_found = Element_with_id_not_found;
exports.from_dom_id = from_dom_id;
exports.of_dom_element = of_dom_element;
/* Snabbdom_dom Not a pure module */
