// Generated by BUCKLESCRIPT VERSION 4.0.5, PLEASE EDIT WITH CARE
'use strict';

var Js_primitive = require("bs-platform/lib/js/js_primitive.js");
var Snabbdom_dom = require("./snabbdom_dom.js");
var Snabbdom_vnode = require("./snabbdom_vnode.js");

function hook(key, cb) {
  var partial_arg = /* array */[
    "hook",
    key
  ];
  return (function (param) {
      return Snabbdom_vnode.set_in_data(partial_arg, cb, param);
    });
}

var hook0 = hook;

var hook1 = hook;

var hook2 = hook;

function pre(cb) {
  return hook("pre", cb);
}

function init(cb) {
  return hook("init", cb);
}

function create(cb) {
  return hook("create", cb);
}

function insert(cb) {
  return hook("insert", cb);
}

function prepatch(cb) {
  return hook("prepatch", cb);
}

function update(cb) {
  return hook("update", cb);
}

function postpatch(cb) {
  return hook("postpatch", cb);
}

function destroy(cb) {
  return hook("destroy", cb);
}

function remove(cb) {
  return hook("remove", cb);
}

function post(cb) {
  return hook("post", cb);
}

var autofocus = hook("insert", (function (vnode) {
        var match = Snabbdom_vnode.get_elm(vnode);
        if (match !== undefined) {
          return Snabbdom_dom.focus(Js_primitive.valFromOption(match));
        } else {
          return /* () */0;
        }
      }));

var VNode = 0;

exports.VNode = VNode;
exports.hook = hook;
exports.hook0 = hook0;
exports.hook1 = hook1;
exports.hook2 = hook2;
exports.pre = pre;
exports.init = init;
exports.create = create;
exports.insert = insert;
exports.prepatch = prepatch;
exports.update = update;
exports.postpatch = postpatch;
exports.destroy = destroy;
exports.remove = remove;
exports.post = post;
exports.autofocus = autofocus;
/* autofocus Not a pure module */
