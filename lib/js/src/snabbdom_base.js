// Generated by BUCKLESCRIPT VERSION 4.0.5, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var Curry = require("bs-platform/lib/js/curry.js");
var $$String = require("bs-platform/lib/js/string.js");
var Snabbdom = require("snabbdom");
var Pervasives = require("bs-platform/lib/js/pervasives.js");
var Snabbdom_vnode = require("./snabbdom_vnode.js");
var Caml_exceptions = require("bs-platform/lib/js/caml_exceptions.js");
var Class = require("snabbdom/modules/class");
var Style = require("snabbdom/modules/style");
var Attributes = require("snabbdom/modules/attributes");

var Not_supported = Caml_exceptions.create("Snabbdom_base.Not_supported");

function recursively_set_namespace(ns, vnode) {
  var partial_arg = /* array */["ns"];
  var vnode$1 = (function (param) {
        return Snabbdom_vnode.set_in_data(partial_arg, ns, param);
      })(vnode);
  var match = Snabbdom_vnode.get_children(vnode$1);
  if (match !== undefined) {
    return $$Array.iter((function (param) {
                  return recursively_set_namespace(ns, param);
                }), match);
  } else {
    return /* () */0;
  }
}

function h(selector, transformers) {
  var vnode = Snabbdom_vnode.empty(/* () */0);
  Snabbdom_vnode.set_sel(vnode, selector);
  var transform = function (vnode, transformer) {
    return Curry._1(transformer, vnode);
  };
  var vnode$1 = List.fold_left(transform, vnode, transformers);
  var len = selector.length;
  var is_svg;
  if (len === 3) {
    is_svg = selector === "svg";
  } else if (len >= 4) {
    var match = $$String.sub(selector, 0, 4);
    switch (match) {
      case "svg#" : 
      case "svg." : 
          is_svg = true;
          break;
      default:
        is_svg = false;
    }
  } else {
    is_svg = false;
  }
  if (is_svg) {
    recursively_set_namespace("http://www.w3.org/2000/svg", vnode$1);
  }
  return vnode$1;
}

function text_vnode(t) {
  var node = Snabbdom_vnode.empty(/* () */0);
  Snabbdom_vnode.set_text(node, t);
  return node;
}

function children(new_children, vnode) {
  var match = Snabbdom_vnode.get_children(vnode);
  var match$1 = Snabbdom_vnode.get_text(vnode);
  if (match !== undefined) {
    if (match$1 !== undefined) {
      throw Not_supported;
    } else {
      Snabbdom_vnode.set_children(vnode, $$Array.append(match, $$Array.of_list(new_children)));
    }
  } else if (match$1 !== undefined) {
    Snabbdom_vnode.clear_text(vnode);
    Snabbdom_vnode.set_children(vnode, $$Array.of_list(Pervasives.$at(/* :: */[
                  text_vnode(match$1),
                  /* [] */0
                ], new_children)));
  } else {
    Snabbdom_vnode.set_children(vnode, $$Array.of_list(new_children));
  }
  return vnode;
}

function text(new_text, vnode) {
  var match = Snabbdom_vnode.get_children(vnode);
  if (match !== undefined) {
    Snabbdom_vnode.set_children(vnode, $$Array.append(match, /* array */[text_vnode(new_text)]));
  } else {
    Snabbdom_vnode.set_text(vnode, new_text);
  }
  return vnode;
}

function key(key$1, vnode) {
  Snabbdom_vnode.set_key(vnode, key$1);
  return vnode;
}

function nothing(a) {
  return a;
}

function attr(key, value) {
  var partial_arg = /* array */[
    "attrs",
    key
  ];
  return (function (param) {
      return Snabbdom_vnode.set_in_data(partial_arg, value, param);
    });
}

function class_name(key) {
  var partial_arg = /* array */[
    "class",
    key
  ];
  return (function (param) {
      return Snabbdom_vnode.set_in_data(partial_arg, true, param);
    });
}

function style(style_attr, value) {
  var partial_arg = /* array */[
    "style",
    style_attr
  ];
  return (function (param) {
      return Snabbdom_vnode.set_in_data(partial_arg, value, param);
    });
}

function style_delayed(style_attr, value) {
  var partial_arg = /* array */[
    "style",
    "delayed",
    style_attr
  ];
  return (function (param) {
      return Snabbdom_vnode.set_in_data(partial_arg, value, param);
    });
}

function style_remove(style_attr, value) {
  var partial_arg = /* array */[
    "style",
    "remove",
    style_attr
  ];
  return (function (param) {
      return Snabbdom_vnode.set_in_data(partial_arg, value, param);
    });
}

function init(prim) {
  return Snabbdom.init(prim);
}

var module_attributes = Attributes.default;

var module_class = Class.default;

var module_style = Style.default;

exports.Not_supported = Not_supported;
exports.init = init;
exports.h = h;
exports.children = children;
exports.text = text;
exports.key = key;
exports.nothing = nothing;
exports.module_attributes = module_attributes;
exports.attr = attr;
exports.module_class = module_class;
exports.class_name = class_name;
exports.module_style = module_style;
exports.style = style;
exports.style_delayed = style_delayed;
exports.style_remove = style_remove;
/* module_attributes Not a pure module */
